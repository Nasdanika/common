<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:org.nasdanika.sirius.tree="urn:org.nasdanika.sirius.tree" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" name="nasdanika" version="12.0.0.2017041100">
  <ownedViewpoints name="NasdanikaViewPoint" label="Nasdanika" modelFileExtension="nsd" icon="/org.nasdanika.emf.presentation/icons/full/obj16/nasdanika-logo.png">
    <ownedJavaExtensions qualifiedClassName="org.nasdanika.design.Services"/>
    <ownedRepresentations xsi:type="org.nasdanika.sirius.tree:AdapterFactoryTreeDescription" documentation="Representation which uses Adapter Factory Tree Content Provider to represent model element content as a tree." name="nasdanikaAdapterFactoryTree" label="Nasdanika Adapter Factory Tree" initialisation="true" editorId="org.nasdanika.emf.presentation.AdapterFactoryTreeEditor.ID">
      <metamodel href="urn:org.nasdanika.ncore#/"/>
      <metamodel href="urn:org.nasdanika.party#/"/>
    </ownedRepresentations>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="nasdanika_rules_properties">
    <metamodels href="urn:org.nasdanika.ncore#/"/>
    <metamodels href="urn:org.nasdanika.party#/"/>
    <categories name="Default">
      <pages name="nasdanika_rules_defaultpage" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()" preconditionExpression="aql:self.isNasdanikaResource()" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="nasdanika_rules_description_page" labelExpression="Description" semanticCandidateExpression="aql:input.getAllSemanticElements()" preconditionExpression="aql:self.isNasdanikaResource() and self.hasDescription()" groups="//@extensions.0/@categories.0/@groups.1"/>
      <pages name="nasdanika_rules_markdown_page" labelExpression="Markdown" semanticCandidateExpression="aql:input.getAllSemanticElements()" preconditionExpression="aql:self.isNasdanikaResource() and self.hasMarkdown()" groups="//@extensions.0/@categories.0/@groups.3"/>
      <pages name="nasdanika_rules_html_page" labelExpression="HTML" semanticCandidateExpression="aql:input.getAllSemanticElements()" preconditionExpression="aql:self.isNasdanikaResource() and self.hasHtml()" groups="//@extensions.0/@categories.0/@groups.2"/>
      <pages name="nasdanika_rules_code_page" labelExpression="Code" semanticCandidateExpression="aql:input.getAllSemanticElements()" preconditionExpression="aql:self.isNasdanikaResource() and self.hasCode()" groups="//@extensions.0/@categories.0/@groups.4"/>
      <pages name="nasdanika_rules_image_page" labelExpression="Image" semanticCandidateExpression="aql:input.getAllSemanticElements()" preconditionExpression="aql:self.isNasdanikaResource() and self.hasImage()" groups="//@extensions.0/@categories.0/@groups.5"/>
      <groups name="nasdanika_rules_defaultgroup" labelExpression="Properties" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="nasdanika_rules_mono_string_select_if" predicateExpression="aql:self.isSelect(input.emfEditServices(self),eStructuralFeature) and input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:SelectDescription" name="nasdanika_rules_mono_string_with_choices_if" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" candidatesExpression="aql:input.emfEditServices(self).getChoiceOfValues(eStructuralFeature)" candidateDisplayExpression="var:candidate">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature) and not self.isSelect(input.emfEditServices(self),eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature) and not self.hasNasdanikaRule(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="10" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature)">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="nasdanika_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
            <widget xsi:type="properties:CustomDescription" name="nasdanika_reference_widget" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)"/>
          </ifs>
        </controls>
      </groups>
      <groups name="nasdanika_rules_description_group" labelExpression="Description" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="nasdanika_rules_description_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature) and self.isDescription(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="nasdanika_rules_description_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="40" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="nasdanika_rules_html_group" labelExpression="HTML Content" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="nasdanika_rules_html_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature) and self.isHtml(eStructuralFeature)">
            <widget xsi:type="properties:CustomDescription" name="nasdanika_rich_text_widget" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)"/>
          </ifs>
        </controls>
      </groups>
      <groups name="nasdanika_rules_markdown_group" labelExpression="Markdown" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="nasdanika_rules_markdown_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature) and self.isMarkdown(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="nasdanika_rules_description_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="40" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="nasdanika_rules_code_group" labelExpression="Code" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="nasdanika_rules_code_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature) and self.isCode(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="nasdanika_rules_code_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" lineCount="40" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
        </controls>
      </groups>
      <groups name="nasdanika_rules_image_group" labelExpression="Image" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="nasdanika_rules_image_if" predicateExpression="aql:self.isImage(eStructuralFeature)">
            <widget xsi:type="properties:CustomDescription" name="nasdanika_image_widget" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)"/>
          </ifs>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
